// @strict-types

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Настройки отчета.
// 
// Параметры:
//  НеобходимыйОтчет - Неопределено, СправочникСсылка.ИдентификаторыОбъектовМетаданных - 
//  ВыбиратьОбщие - Булево
// 
// Возвращаемое значение:
//  см. ИТМ_ИсторияФормированияОтчетовКлиентСервер.ШаблонНастроекПодсистемы
Функция НастройкиОтчета(Знач НеобходимыйОтчет = Неопределено, Знач ВыбиратьОбщие = Истина) Экспорт

	СсылкаНаОбщиеНастройки = Справочники.ИдентификаторыОбъектовМетаданных.ПустаяСсылка();
	Если НЕ ТипЗнч(НеобходимыйОтчет) = ТипЗнч(СсылкаНаОбщиеНастройки) Тогда
		НеобходимыйОтчет = СсылкаНаОбщиеНастройки;
	КонецЕсли;
	
	НеобходимыеОтчеты = Новый Массив; //Массив из СправочникСсылка.ИдентификаторыОбъектовМетаданных
	НеобходимыеОтчеты.Добавить(НеобходимыйОтчет);
	Если ВыбиратьОбщие И НЕ (НеобходимыйОтчет = СсылкаНаОбщиеНастройки) Тогда
		НеобходимыеОтчеты.Добавить(СсылкаНаОбщиеНастройки);
	КонецЕсли;
	
	НастройкиОтчета = Новый Структура;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	*,
	|	Отчет = &СсылкаНаОбщиеНастройки КАК ЭтоОбщиеНастройки
	|ИЗ
	|	РегистрСведений.ИТМ_НастройкиИсторииФормированияОтчетов
	|ГДЕ
	|	Отчет В(&НеобходимыеОтчеты)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЭтоОбщиеНастройки");
	Запрос.УстановитьПараметр("СсылкаНаОбщиеНастройки", СсылкаНаОбщиеНастройки);
	Запрос.УстановитьПараметр("НеобходимыеОтчеты", НеобходимыеОтчеты);
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка	= РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			НастройкиОтчета_ОбработатьЭлементВыборки(Выборка, НастройкиОтчета);
		КонецЦикла;
	КонецЕсли;
	
	Если НастройкиОтчета = Неопределено Тогда
		НастройкиОтчета = ИТМ_ИсторияФормированияОтчетовКлиентСервер.ШаблонНастроекПодсистемы();
	КонецЕсли;
		
	Возврат НастройкиОтчета;
		
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Настройки отчета обработать элемент выборки.
// 
// Параметры:
//  Выборка - ВыборкаИзРезультатаЗапроса -:
//  * ЭтоОбщиеНастройки - Булево
//  НастройкиОтчета - см. ИТМ_ИсторияФормированияОтчетовКлиентСервер.ШаблонНастроекПодсистемы
Процедура НастройкиОтчета_ОбработатьЭлементВыборки(Выборка, НастройкиОтчета)
	
	ЕстьНастройкиОтчета = ЗначениеЗаполнено(НастройкиОтчета) ИЛИ НЕ Выборка.ЭтоОбщиеНастройки;
	ТолькоДозаполнить   = Выборка.ЭтоОбщиеНастройки И ЕстьНастройкиОтчета;

	ТекущиеНастройки    = Новый Структура; //см. ИТМ_ИсторияФормированияОтчетовКлиентСервер.ШаблонНастроекПодсистемы
	Для Каждого РесурсРегистра Из Метаданные.РегистрыСведений.ИТМ_НастройкиИсторииФормированияОтчетов.Ресурсы Цикл
		ПолеВыборки = Выборка[РесурсРегистра.Имя]; //Произвольный
		Если ТипЗнч(ПолеВыборки) = Тип("ХранилищеЗначения") Тогда
			ТекущееЗначение	= ПолеВыборки.Получить();
		Иначе
			ТекущееЗначение = ПолеВыборки;
		КонецЕсли;
		ТекущиеНастройки.Вставить(РесурсРегистра.Имя, ТекущееЗначение);
	КонецЦикла;

	Если ТипЗнч(ТекущиеНастройки.ДополнительныеНастройки) <> Тип("Структура") Тогда
		ТекущиеНастройки.ДополнительныеНастройки = Новый Структура;
	КонецЕсли;

	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ТекущиеНастройки.ДополнительныеНастройки, 
		ИТМ_ИсторияФормированияОтчетовКлиентСервер.ШаблонДополнительныхНастроекПодсистемы(), Ложь);

	Если ТолькоДозаполнить Тогда
				//Если в общих настройках мы фиксируем историю и используем отборы, 
				//а в настройках отчета мы НЕ используем свои отборы, 
				//то общие отборы применяются к текущему.
		Если Не НастройкиОтчета.ИспользоватьОтборы И ТекущиеНастройки.ФиксироватьИсторию
			И ТекущиеНастройки.ИспользоватьОтборы Тогда
			НастройкиОтчета.ИспользоватьОтборы = Истина;
			НастройкиОтчета.ДополнительныеНастройки.Отборы = ТекущиеНастройки.ДополнительныеНастройки.Отборы;
		КонецЕсли;
	Иначе
		НастройкиОтчета = ТекущиеНастройки;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
